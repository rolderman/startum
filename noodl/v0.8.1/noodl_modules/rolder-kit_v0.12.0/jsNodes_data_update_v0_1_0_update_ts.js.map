{"version":3,"file":"jsNodes_data_update_v0_1_0_update_ts.js","sources":["./jsNodes/data/update/v0.1.0/update.ts","./libs/kuzzle/v.0.1.0/update.ts"],"sourcesContent":["import update from \"../../../../libs/kuzzle/v.0.1.0/update\"\n\nexport default async function node(noodleNode: any) {\n    noodleNode.setOutputs({ updating: true })\n    update(noodleNode.inputs.updateItem)\n        .then((response) => {\n            noodleNode.setOutputs({ updating: false, updatedItem: response })\n            noodleNode.sendSignalOnOutput('updated')\n        })\n}","import { convertKuzzleResponse, dbVersion, dbClassVersion } from '../../../utils/data/v0.2.0/data'\nimport ErrorHandler from '../../errorHandler/v0.1.0/ErrorHandler'\nimport useData from '../../useData/v0.2.0/useData'\n\nconst update = async ({ dbClass, id, body }: { dbClass: string, id: string, body: any }) => {\n    const Kuzzle = window.Kuzzle\n    const { debug, dbClasses } = window.Rolder\n\n    const index = dbVersion()\n    const dbClassV = dbClassVersion(dbClass)\n\n    if (debug > 0) console.time(dbClassV + ' update time')\n    if (debug > 1) console.log(dbClassV + ' props:', { dbClass, id, body })\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.document.update(index, dbClassV, id, body, { refresh: 'wait_for' })\n            .then((response: any) => {\n                if (!dbClasses[dbClass].subscribe) useData.invalidate({ dbClass })\n                const jsonItem = convertKuzzleResponse(response)\n                if (debug > 1) console.log(dbClassV + ' updated:', jsonItem)\n                if (debug > 0) console.timeEnd(dbClassV + ' update time')\n                return jsonItem\n            })\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle update ' + dbClassV + ': ' + error.message }))\n    )\n}\n\nexport default update"],"names":["node","noodleNode","setOutputs","updating","inputs","updateItem","then","response","updatedItem","sendSignalOnOutput","update","dbClass","id","body","Kuzzle","window","debug","dbClasses","Rolder","index","dbVersion","dbClassV","dbClassVersion","console","time","log","connect","document","refresh","subscribe","jsonItem","convertKuzzleResponse","timeEnd","catch","error","title","message"],"mappings":"iNAEe,eAAeA,EAAKC,CAAe,EAC9CA,EAAWC,UAAU,CAAC,CAAEC,SAAU,EAAK,GACvC,cAAOF,EAAWG,MAAM,CAACC,UAAU,EAC9BC,IAAI,CAAC,AAACC,IACHN,EAAWC,UAAU,CAAC,CAAEC,SAAU,GAAOK,YAAaD,CAAS,GAC/DN,EAAWQ,kBAAkB,CAAC,UAClC,EACR,C,iICLA,IAAMC,EAAS,MAAO,CAAEC,QAAAA,CAAO,CAAEC,GAAAA,CAAE,CAAEC,KAAAA,CAAI,CAA8C,IACnF,IAAMC,EAASC,OAAOD,MAAM,CACtB,CAAEE,MAAAA,CAAK,CAAEC,UAAAA,CAAS,CAAE,CAAGF,OAAOG,MAAM,CAEpCC,EAAQ,KAAAC,SAAA,IACRC,EAAW,KAAAC,cAAA,EAAeX,GAKhC,OAHIK,EAAQ,GAAGO,QAAQC,IAAI,CAACH,EAAW,gBACnCL,EAAQ,GAAGO,QAAQE,GAAG,CAACJ,EAAW,UAAW,CAAEV,QAAAA,EAASC,GAAAA,EAAIC,KAAAA,CAAK,GAE9DC,EAAOY,OAAO,GAAGpB,IAAI,CAAC,IACzBQ,EAAOa,QAAQ,CAACjB,MAAM,CAACS,EAAOE,EAAUT,EAAIC,EAAM,CAAEe,QAAS,UAAW,GACnEtB,IAAI,CAAC,AAACC,IACC,CAACU,CAAS,CAACN,EAAQ,CAACkB,SAAS,EAAE,oBAAkB,CAAC,CAAElB,QAAAA,CAAQ,GAChE,IAAMmB,EAAW,KAAAC,qBAAA,EAAsBxB,GAGvC,OAFIS,EAAQ,GAAGO,QAAQE,GAAG,CAACJ,EAAW,YAAaS,GAC/Cd,EAAQ,GAAGO,QAAQS,OAAO,CAACX,EAAW,gBACnCS,CACX,GACCG,KAAK,CAAC,AAACC,GAAe,cAAa,CAAEC,MAAO,oBAAqBC,QAAS,iBAAmBf,EAAW,KAAOa,EAAME,OAAO,AAAC,IAE1I,EAEA,MAAe1B,C"}