{"version":3,"file":"jsNodes_data_mutate_sUpdate_v0_v0_2_0_sUpdate_ts.js","sources":["./jsNodes/data/mutate/sUpdate/v0/v0.2.0/sUpdate.ts","./libs/dataService/1_transform/tools/deepFlush/v0.1.0/deepFlush.ts","./libs/dataService/2_back/mutate/update/v0.4.0/update.ts","./libs/dataService/2_back/mutate/updateUser/v0.2.0/updateUser.ts"],"sourcesContent":["import update from \"../../../../../../libs/dataService/2_back/mutate/update/v0.4.0/update\"\nimport updateUser from '../../../../../../libs/dataService/2_back/mutate/updateUser/v0.2.0/updateUser'\nimport { sendOutput, sendSignal } from \"../../../../../../utils/noodl/send/v0.2.0/send\"\n\nconst signals = {\n  update: (noodlNode: NodeInstance) => {\n    const { updateScheme, optimistic }: { updateScheme: CreateUpdateScheme[], optimistic: boolean } = noodlNode._inputValues\n    sendOutput(noodlNode, 'updating', true)\n\n    const updatePromise = (scheme: CreateUpdateScheme) => update(scheme, optimistic)\n    const updateUserPromise = (scheme: CreateUpdateUser) => updateUser(scheme, optimistic)\n\n    if (updateScheme) {\n      Promise.all(updateScheme.map((scheme: CreateUpdateScheme) => {\n        if (scheme.dbClass === 'user') return updateUserPromise(scheme)\n        else return updatePromise(scheme)\n      })).then((results: any) => {\n        sendOutput(noodlNode, 'updatedData', results)\n        sendSignal(noodlNode, 'updated')\n        sendOutput(noodlNode, 'updating', false)\n      })\n    }\n  }\n}\n\nexport default signals","import isEmpty from \"just-is-empty\";\nimport map from \"just-map-object\"\n\nexport default function deepFlush(item: any) {\n    const finalObj: any = {};\n    if (item && typeof item === 'object') {\n        map(item, (k, v) => {\n            if (typeof v === 'object' && !Array.isArray(v)) {\n                if (!isEmpty(v)) {\n                    const nestedObj = deepFlush(v)\n                    if (!isEmpty(nestedObj)) finalObj[k] = nestedObj\n                }\n            } else if (Array.isArray(v)) {\n                v.forEach((i) => {\n                    const nestedObj = deepFlush(i)\n                    if (nestedObj?.length) finalObj[k] = finalObj[k] ? [...finalObj[k], nestedObj] : [nestedObj]\n                })\n            } else if (v) finalObj[k] = v\n        })\n        return finalObj\n    } else if (item) return item\n    else if (Array.isArray(item)) throw new Error(`It is array, object expected: ${item}`)\n}","import conLog from '../../../../../../utils/debug/conLog/v0.1.0/conLog'\nimport ErrorHandler from '../../../../../errorHandler/v0.1.0/ErrorHandler'\nimport { setOptions } from '../../../../0_query/tools/setDefaults/v0.2.0/setDefaults'\nimport { dbClassVersion, dbVersion } from '../../../tools/getVersion/v0.2.0/getVersion'\nimport deepFlush from '../../../../1_transform/tools/deepFlush/v0.1.0/deepFlush'\nimport updateNItems from '../../../../1_transform/update/v0.1.0/updateNItems'\n\nconst update = async (updateItem: CreateUpdateItem, optimistic: boolean): Promise<NItem> => {\n    const { Kuzzle } = window\n    const { dbClass, id, body } = updateItem\n    const options = setOptions(dbClass)\n    const dbClassV = dbClassVersion(dbClass)\n    const flushedBody = deepFlush(body)\n\n    conLog(`${dbClassV} update`, 'time')\n    conLog([`${dbClassV} props: `, { dbClass, id, flushedBody, options }])\n\n    let nItem: NItem\n    if (optimistic) nItem = updateNItems(dbClass, [{ id, ...flushedBody }])?.[0]\n    \n    return Kuzzle.connect().then(() =>\n        Kuzzle.document.update(dbVersion(), dbClassV, id, flushedBody, options)\n            .then(() => {\n                conLog([`${dbClassV} updated: `, nItem])\n                conLog(`${dbClassV} update`, 'timeEnd')\n\n                if (!optimistic) nItem = updateNItems(dbClass, [{ id, ...flushedBody }])?.[0]\n                return nItem\n            })\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle update ' + dbClassV + ': ' + error.message }))\n    )\n}\n\nexport default update","import conLog from \"../../../../../../utils/debug/conLog/v0.1.0/conLog\"\nimport ErrorHandler from \"../../../../../errorHandler/v0.1.0/ErrorHandler\"\nimport { setOptions } from \"../../../../0_query/tools/setDefaults/v0.2.0/setDefaults\"\nimport deepFlush from \"../../../../1_transform/tools/deepFlush/v0.1.0/deepFlush\"\nimport updateNItems from \"../../../../1_transform/update/v0.1.0/updateNItems\"\n\nconst updateUser = async (updateUser: CreateUpdateUser, optimistic: boolean): Promise<NItem> => {\n    const { Kuzzle } = window\n    const { id, body } = updateUser\n    const options = setOptions('user')\n    const flushedBody = deepFlush(body)\n\n    let nUser = {}\n    if (optimistic) nUser = updateNItems('user', [{ id, ...flushedBody }])?.[0]\n    let userBody = { ...body.content, credentials: { local: { notSecret: body.credentials?.local.notSecret } } }\n\n    conLog(`UpdateUser`, 'time')\n    conLog([`Props: `, { id, flushedBody, options }])\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.security.updateCredentials('local', id, body.credentials?.local)\n            .then(() => Kuzzle.security.updateUser(id, userBody, options)\n                .then(() => {\n                    if (!optimistic) nUser = updateNItems('user', [{ id, ...flushedBody }])?.[0]\n                    return nUser\n                }))\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle updateUser ' + ': ' + error.message }))\n    )\n}\n\nexport default updateUser"],"names":["update","noodlNode","updateScheme","optimistic","_inputValues","sendOutput","updatePromise","scheme","updateUserPromise","Promise","all","map","dbClass","then","results","sendSignal","deepFlush","item","finalObj","k","v","Array","isArray","forEach","i","nestedObj","length","Error","updateItem","nItem","Kuzzle","window","id","body","options","setOptions","dbClassV","dbClassVersion","flushedBody","connect","document","dbVersion","catch","error","title","message","updateUser","nUser","userBody","content","credentials","local","notSecret","security","updateCredentials"],"mappings":"yPAyBA,EArBgB,CACdA,OAAQ,AAACC,IACP,GAAM,CAAEC,aAAAA,CAAY,CAAEC,WAAAA,CAAU,CAAE,CAAgEF,EAAUG,YAAY,CACxH,KAAAC,UAAA,EAAWJ,EAAW,WAAY,IAElC,IAAMK,EAAgB,AAACC,GAA+B,cAAOA,EAAQJ,GAC/DK,EAAoB,AAACD,GAA6B,cAAWA,EAAQJ,GAEvED,GACFO,QAAQC,GAAG,CAACR,EAAaS,GAAG,CAAC,AAACJ,GAC5B,AAAIA,AAAmB,SAAnBA,EAAOK,OAAO,CAAoBJ,EAAkBD,GAC5CD,EAAcC,KACxBM,IAAI,CAAC,AAACC,IACR,KAAAT,UAAA,EAAWJ,EAAW,cAAea,GACrC,KAAAC,UAAA,EAAWd,EAAW,WACtB,KAAAI,UAAA,EAAWJ,EAAW,WAAY,GACpC,EAEJ,CACF,C,8ECpBe,SAASe,EAAUC,CAAS,EACvC,IAAMC,EAAgB,CAAC,EACvB,GAAID,GAAQ,AAAgB,UAAhB,OAAOA,EAcf,MAbA,cAAIA,EAAM,CAACE,EAAGC,KACV,GAAI,AAAa,UAAb,OAAOA,GAAmBC,MAAMC,OAAO,CAACF,GAKjCC,MAAMC,OAAO,CAACF,GACrBA,EAAEG,OAAO,CAAC,AAACC,IACP,IAAMC,EAAYT,EAAUQ,GACxBC,GAAWC,QAAQR,CAAAA,CAAQ,CAACC,EAAE,CAAGD,CAAQ,CAACC,EAAE,CAAG,IAAID,CAAQ,CAACC,EAAE,CAAEM,EAAU,CAAG,CAACA,EAAU,A,CAChG,GACOL,GAAGF,CAAAA,CAAQ,CAACC,EAAE,CAAGC,CAAAA,OATxB,GAAI,CAAC,cAAQA,GAAI,CACb,IAAMK,EAAYT,EAAUI,EACxB,EAAC,cAAQK,IAAYP,CAAAA,CAAQ,CAACC,EAAE,CAAGM,CAAQ,CACnD,CAOR,GACOP,EACJ,GAAID,EAAM,OAAOA,EACnB,GAAII,MAAMC,OAAO,CAACL,GAAO,MAAM,AAAIU,MAAM,CAAC,8BAA8B,EAAEV,EAAK,CAAC,CACzF,C,8MCfA,IAAMjB,EAAS,MAAO4B,EAA8BzB,SAU5C0B,EATJ,GAAM,CAAEC,OAAAA,CAAM,CAAE,CAAGC,OACb,CAAEnB,QAAAA,CAAO,CAAEoB,GAAAA,CAAE,CAAEC,KAAAA,CAAI,CAAE,CAAGL,EACxBM,EAAU,KAAAC,UAAA,EAAWvB,GACrBwB,EAAW,KAAAC,cAAA,EAAezB,GAC1B0B,EAAc,cAAUL,GAQ9B,MANA,cAAO,CAAC,EAAEG,EAAS,OAAO,CAAC,CAAE,QAC7B,cAAO,CAAC,CAAC,EAAEA,EAAS,QAAQ,CAAC,CAAE,CAAExB,QAAAA,EAASoB,GAAAA,EAAIM,YAAAA,EAAaJ,QAAAA,CAAQ,EAAE,EAGjE/B,GAAY0B,CAAAA,EAAQ,UAAajB,EAAS,CAAC,CAAEoB,GAAAA,EAAI,GAAGM,CAAW,AAAC,EAAE,GAAG,CAAC,EAAE,AAAD,EAEpER,EAAOS,OAAO,GAAG1B,IAAI,CAAC,IACzBiB,EAAOU,QAAQ,CAACxC,MAAM,CAAC,KAAAyC,SAAA,IAAaL,EAAUJ,EAAIM,EAAaJ,GAC1DrB,IAAI,CAAC,KACF,cAAO,CAAC,CAAC,EAAEuB,EAAS,UAAU,CAAC,CAAEP,EAAM,EACvC,cAAO,CAAC,EAAEO,EAAS,OAAO,CAAC,CAAE,WAEzB,CAACjC,GAAY0B,CAAAA,EAAQ,UAAajB,EAAS,CAAC,CAAEoB,GAAAA,EAAI,GAAGM,CAAW,AAAC,EAAE,GAAG,CAAC,EAAE,AAAD,EACrET,IAEVa,KAAK,CAAC,AAACC,GAAe,cAAa,CAAEC,MAAO,oBAAqBC,QAAS,iBAAmBT,EAAW,KAAOO,EAAME,OAAO,AAAC,IAE1I,EAEA,MAAe7C,C,6JC3Bf,IAAM8C,EAAa,MAAOA,EAA8B3C,KACpD,GAAM,CAAE2B,OAAAA,CAAM,CAAE,CAAGC,OACb,CAAEC,GAAAA,CAAE,CAAEC,KAAAA,CAAI,CAAE,CAAGa,EACfZ,EAAU,KAAAC,UAAA,EAAW,QACrBG,EAAc,cAAUL,GAE1Bc,EAAQ,CAAC,EACT5C,GAAY4C,CAAAA,EAAQ,UAAa,OAAQ,CAAC,CAAEf,GAAAA,EAAI,GAAGM,CAAW,AAAC,EAAE,GAAG,CAAC,EAAE,AAAD,EAC1E,IAAIU,EAAW,CAAE,GAAGf,EAAKgB,OAAO,CAAEC,YAAa,CAAEC,MAAO,CAAEC,UAAWnB,EAAKiB,WAAW,EAAEC,MAAMC,SAAU,CAAE,CAAE,EAK3G,MAHA,cAAO,aAAc,QACrB,cAAO,CAAC,UAAW,CAAEpB,GAAAA,EAAIM,YAAAA,EAAaJ,QAAAA,CAAQ,EAAE,EAEzCJ,EAAOS,OAAO,GAAG1B,IAAI,CAAC,IACzBiB,EAAOuB,QAAQ,CAACC,iBAAiB,CAAC,QAAStB,EAAIC,EAAKiB,WAAW,EAAEC,OAC5DtC,IAAI,CAAC,IAAMiB,EAAOuB,QAAQ,CAACP,UAAU,CAACd,EAAIgB,EAAUd,GAChDrB,IAAI,CAAC,KACE,CAACV,GAAY4C,CAAAA,EAAQ,UAAa,OAAQ,CAAC,CAAEf,GAAAA,EAAI,GAAGM,CAAW,AAAC,EAAE,GAAG,CAAC,EAAE,AAAD,EACpES,KAEdL,KAAK,CAAC,AAACC,GAAe,cAAa,CAAEC,MAAO,oBAAqBC,QAAS,uBAA8BF,EAAME,OAAO,AAAC,IAEnI,EAEA,MAAeC,C"}