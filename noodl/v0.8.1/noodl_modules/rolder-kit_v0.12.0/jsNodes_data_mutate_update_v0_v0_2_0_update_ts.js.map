{"version":3,"file":"jsNodes_data_mutate_update_v0_v0_2_0_update_ts.js","sources":["./jsNodes/data/mutate/update/v0/v0.2.0/update.ts","./libs/dataService/1_transform/tools/deepFlush/v0.1.0/deepFlush.ts","./libs/dataService/2_back/mutate/update/v0.4.0/update.ts"],"sourcesContent":["import update from \"../../../../../../libs/dataService/2_back/mutate/update/v0.4.0/update\"\nimport { sendOutput, sendSignal } from \"../../../../../../utils/noodl/send/v0.2.0/send\"\n\nconst signals = {\n  update: (noodlNode: NodeInstance) => {\n    const { updateItem, optimistic }: { updateItem: CreateUpdateItem, optimistic: boolean } = noodlNode._inputValues\n    sendOutput(noodlNode, 'updating', true)\n\n    update(updateItem, optimistic).then(nItem => {\n      sendOutput(noodlNode, 'updatedItem', nItem)\n      sendSignal(noodlNode, 'updated')\n      sendOutput(noodlNode, 'updating', false)\n    })\n  }\n}\n\nexport default signals","import isEmpty from \"just-is-empty\";\nimport map from \"just-map-object\"\n\nexport default function deepFlush(item: any) {\n    const finalObj: any = {};\n    if (item && typeof item === 'object') {\n        map(item, (k, v) => {\n            if (typeof v === 'object' && !Array.isArray(v)) {\n                if (!isEmpty(v)) {\n                    const nestedObj = deepFlush(v)\n                    if (!isEmpty(nestedObj)) finalObj[k] = nestedObj\n                }\n            } else if (Array.isArray(v)) {\n                v.forEach((i) => {\n                    const nestedObj = deepFlush(i)\n                    if (nestedObj?.length) finalObj[k] = finalObj[k] ? [...finalObj[k], nestedObj] : [nestedObj]\n                })\n            } else if (v) finalObj[k] = v\n        })\n        return finalObj\n    } else if (item) return item\n    else if (Array.isArray(item)) throw new Error(`It is array, object expected: ${item}`)\n}","import conLog from '../../../../../../utils/debug/conLog/v0.1.0/conLog'\nimport ErrorHandler from '../../../../../errorHandler/v0.1.0/ErrorHandler'\nimport { setOptions } from '../../../../0_query/tools/setDefaults/v0.2.0/setDefaults'\nimport { dbClassVersion, dbVersion } from '../../../tools/getVersion/v0.2.0/getVersion'\nimport deepFlush from '../../../../1_transform/tools/deepFlush/v0.1.0/deepFlush'\nimport updateNItems from '../../../../1_transform/update/v0.1.0/updateNItems'\n\nconst update = async (updateItem: CreateUpdateItem, optimistic: boolean): Promise<NItem> => {\n    const { Kuzzle } = window\n    const { dbClass, id, body } = updateItem\n    const options = setOptions(dbClass)\n    const dbClassV = dbClassVersion(dbClass)\n    const flushedBody = deepFlush(body)\n\n    conLog(`${dbClassV} update`, 'time')\n    conLog([`${dbClassV} props: `, { dbClass, id, flushedBody, options }])\n\n    let nItem: NItem\n    if (optimistic) nItem = updateNItems(dbClass, [{ id, ...flushedBody }])?.[0]\n    \n    return Kuzzle.connect().then(() =>\n        Kuzzle.document.update(dbVersion(), dbClassV, id, flushedBody, options)\n            .then(() => {\n                conLog([`${dbClassV} updated: `, nItem])\n                conLog(`${dbClassV} update`, 'timeEnd')\n\n                if (!optimistic) nItem = updateNItems(dbClass, [{ id, ...flushedBody }])?.[0]\n                return nItem\n            })\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle update ' + dbClassV + ': ' + error.message }))\n    )\n}\n\nexport default update"],"names":["update","noodlNode","updateItem","optimistic","_inputValues","sendOutput","then","nItem","sendSignal","deepFlush","item","finalObj","k","v","Array","isArray","forEach","i","nestedObj","length","Error","Kuzzle","window","dbClass","id","body","options","setOptions","dbClassV","dbClassVersion","flushedBody","connect","document","dbVersion","catch","error","title","message"],"mappings":"yOAgBA,EAbgB,CACdA,OAAQ,AAACC,IACP,GAAM,CAAEC,WAAAA,CAAU,CAAEC,WAAAA,CAAU,CAAE,CAA0DF,EAAUG,YAAY,CAChH,KAAAC,UAAA,EAAWJ,EAAW,WAAY,IAElC,cAAOC,EAAYC,GAAYG,IAAI,CAAC,AAAAC,IAClC,KAAAF,UAAA,EAAWJ,EAAW,cAAeM,GACrC,KAAAC,UAAA,EAAWP,EAAW,WACtB,KAAAI,UAAA,EAAWJ,EAAW,WAAY,GACpC,EACF,CACF,C,8ECXe,SAASQ,EAAUC,CAAS,EACvC,IAAMC,EAAgB,CAAC,EACvB,GAAID,GAAQ,AAAgB,UAAhB,OAAOA,EAcf,MAbA,cAAIA,EAAM,CAACE,EAAGC,KACV,GAAI,AAAa,UAAb,OAAOA,GAAmBC,MAAMC,OAAO,CAACF,GAKjCC,MAAMC,OAAO,CAACF,GACrBA,EAAEG,OAAO,CAAC,AAACC,IACP,IAAMC,EAAYT,EAAUQ,GACxBC,GAAWC,QAAQR,CAAAA,CAAQ,CAACC,EAAE,CAAGD,CAAQ,CAACC,EAAE,CAAG,IAAID,CAAQ,CAACC,EAAE,CAAEM,EAAU,CAAG,CAACA,EAAU,A,CAChG,GACOL,GAAGF,CAAAA,CAAQ,CAACC,EAAE,CAAGC,CAAAA,OATxB,GAAI,CAAC,cAAQA,GAAI,CACb,IAAMK,EAAYT,EAAUI,EACxB,EAAC,cAAQK,IAAYP,CAAAA,CAAQ,CAACC,EAAE,CAAGM,CAAQ,CACnD,CAOR,GACOP,EACJ,GAAID,EAAM,OAAOA,EACnB,GAAII,MAAMC,OAAO,CAACL,GAAO,MAAM,AAAIU,MAAM,CAAC,8BAA8B,EAAEV,EAAK,CAAC,CACzF,C,8MCfA,IAAMV,EAAS,MAAOE,EAA8BC,SAU5CI,EATJ,GAAM,CAAEc,OAAAA,CAAM,CAAE,CAAGC,OACb,CAAEC,QAAAA,CAAO,CAAEC,GAAAA,CAAE,CAAEC,KAAAA,CAAI,CAAE,CAAGvB,EACxBwB,EAAU,KAAAC,UAAA,EAAWJ,GACrBK,EAAW,KAAAC,cAAA,EAAeN,GAC1BO,EAAc,cAAUL,GAQ9B,MANA,cAAO,CAAC,EAAEG,EAAS,OAAO,CAAC,CAAE,QAC7B,cAAO,CAAC,CAAC,EAAEA,EAAS,QAAQ,CAAC,CAAE,CAAEL,QAAAA,EAASC,GAAAA,EAAIM,YAAAA,EAAaJ,QAAAA,CAAQ,EAAE,EAGjEvB,GAAYI,CAAAA,EAAQ,UAAagB,EAAS,CAAC,CAAEC,GAAAA,EAAI,GAAGM,CAAW,AAAC,EAAE,GAAG,CAAC,EAAE,AAAD,EAEpET,EAAOU,OAAO,GAAGzB,IAAI,CAAC,IACzBe,EAAOW,QAAQ,CAAChC,MAAM,CAAC,KAAAiC,SAAA,IAAaL,EAAUJ,EAAIM,EAAaJ,GAC1DpB,IAAI,CAAC,KACF,cAAO,CAAC,CAAC,EAAEsB,EAAS,UAAU,CAAC,CAAErB,EAAM,EACvC,cAAO,CAAC,EAAEqB,EAAS,OAAO,CAAC,CAAE,WAEzB,CAACzB,GAAYI,CAAAA,EAAQ,UAAagB,EAAS,CAAC,CAAEC,GAAAA,EAAI,GAAGM,CAAW,AAAC,EAAE,GAAG,CAAC,EAAE,AAAD,EACrEvB,IAEV2B,KAAK,CAAC,AAACC,GAAe,cAAa,CAAEC,MAAO,oBAAqBC,QAAS,iBAAmBT,EAAW,KAAOO,EAAME,OAAO,AAAC,IAE1I,EAEA,MAAerC,C"}