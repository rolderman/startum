{"version":3,"file":"jsNodes_data_mutate_sCreate_v0_v0_2_0_sCreate_ts.js","sources":["./jsNodes/data/mutate/sCreate/v0/v0.2.0/sCreate.ts","./libs/dataService/1_transform/tools/deepFlush/v0.1.0/deepFlush.ts","./libs/dataService/2_back/mutate/create/v0.3.0/create.ts","./libs/dataService/2_back/mutate/createUser/v0.4.0/createUser.ts"],"sourcesContent":["import unique from \"just-unique\"\nimport { sendOutput, sendSignal } from \"../../../../../../utils/noodl/send/v0.2.0/send\"\nimport create from \"../../../../../../libs/dataService/2_back/mutate/create/v0.3.0/create\"\nimport createUser from '../../../../../../libs/dataService/2_back/mutate/createUser/v0.4.0/createUser'\n\nconst signals = {\n  create: (noodlNode: NodeInstance) => {\n    const { createScheme }: { createScheme: CreateUpdateScheme[] } = noodlNode._inputValues\n    sendOutput(noodlNode, 'creating', true)\n\n    const orders = unique(createScheme.map(i => i.order)).sort()\n    const createPromise = (scheme: CreateUpdateScheme) => create(scheme)\n    const createUserPromise = (scheme: CreateUpdateScheme) => createUser(scheme)\n    const schemeArrays = orders.map(order => {\n      return createScheme.filter(i => i.order === order)\n    })\n\n    async function executeArrays() {\n      let results: any = {};\n      for (const schemeArray of schemeArrays) {\n        const arrayResults = await Promise.all(schemeArray.map((scheme: any) => {\n          const refs: string[] = scheme.references\n          if (refs) refs.forEach(ref => scheme.body[ref] = { ...scheme.body[ref], id: results[ref]?.id })\n          if (scheme.dbClass === 'user') return createUserPromise(scheme)\n          else return createPromise(scheme)\n        }))\n        schemeArray.forEach((scheme, idx) => results[scheme.dbClass] = arrayResults[idx])\n      }\n      sendOutput(noodlNode, 'createdData', results)\n      sendSignal(noodlNode, 'created')\n      sendOutput(noodlNode, 'creating', false)\n    }\n\n    executeArrays().catch((error) => console.error(error))\n  }\n}\n\nexport default signals","import isEmpty from \"just-is-empty\";\nimport map from \"just-map-object\"\n\nexport default function deepFlush(item: any) {\n    const finalObj: any = {};\n    if (item && typeof item === 'object') {\n        map(item, (k, v) => {\n            if (typeof v === 'object' && !Array.isArray(v)) {\n                if (!isEmpty(v)) {\n                    const nestedObj = deepFlush(v)\n                    if (!isEmpty(nestedObj)) finalObj[k] = nestedObj\n                }\n            } else if (Array.isArray(v)) {\n                v.forEach((i) => {\n                    const nestedObj = deepFlush(i)\n                    if (nestedObj?.length) finalObj[k] = finalObj[k] ? [...finalObj[k], nestedObj] : [nestedObj]\n                })\n            } else if (v) finalObj[k] = v\n        })\n        return finalObj\n    } else if (item) return item\n    else if (Array.isArray(item)) throw new Error(`It is array, object expected: ${item}`)\n}","import conLog from \"../../../../../../utils/debug/conLog/v0.1.0/conLog\"\nimport ErrorHandler from \"../../../../../errorHandler/v0.1.0/ErrorHandler\"\nimport { setOptions } from \"../../../../0_query/tools/setDefaults/v0.2.0/setDefaults\"\nimport addNItem from \"../../../../1_transform/create/v0.1.0/addNItem\"\nimport convertK from \"../../../../1_transform/tools/convertK/v0.1.0/convertK\"\nimport deepFlush from \"../../../../1_transform/tools/deepFlush/v0.1.0/deepFlush\"\nimport triggerQueries from \"../../../../1_transform/tools/triggerQueries/v0.1.0/triggerQueries\"\nimport { dbClassVersion, dbVersion } from \"../../../tools/getVersion/v0.2.0/getVersion\"\n\nconst create = async (createItem: CreateUpdateItem): Promise<NItem> => {\n    const { Kuzzle } = window\n    const { dbClass, body } = createItem\n    const options = setOptions(dbClass)\n    const dbClassV = dbClassVersion(dbClass)\n    const flushedBody = deepFlush(body)\n\n    conLog(`${dbClassV} create`, 'time')\n    conLog([`${dbClassV} props: `, { dbClass, body, options }])\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.document.create(dbVersion(), dbClassV, flushedBody, null, options)\n            .then((kItem: KItem) => {\n                const rItem = convertK([kItem])?.[0]\n                const nItem = addNItem(dbClass, rItem)\n                triggerQueries(dbClass)\n\n                conLog([`${dbClassV} created: `, nItem])\n                conLog(`${dbClassV} create`, 'timeEnd')\n                return nItem\n            })\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle create ' + dbClassV + ': ' + error.message }))\n    )\n}\n\nexport default create","import conLog from \"../../../../../../utils/debug/conLog/v0.1.0/conLog\"\nimport ErrorHandler from \"../../../../../errorHandler/v0.1.0/ErrorHandler\"\nimport addNItem from \"../../../../1_transform/create/v0.1.0/addNItem\"\nimport { convertKUser } from \"../../../../1_transform/tools/convertK/v0.1.0/convertK\"\nimport deepFlush from \"../../../../1_transform/tools/deepFlush/v0.1.0/deepFlush\"\nimport triggerQueries from \"../../../../1_transform/tools/triggerQueries/v0.1.0/triggerQueries\"\n\nconst createUser = async (createUser: CreateUpdateUser): Promise<NItem> => {\n    const { Kuzzle } = window\n    const { body } = createUser\n    const options = { refresh: 'wait_for' }\n    const flushedBody = deepFlush(body)\n\n    const content = { ...flushedBody.content, credentials: { local: { notSecret: flushedBody.credentials?.local.notSecret } } }\n    let credentials = flushedBody.credentials\n    delete credentials?.local.notSecret\n\n    conLog(`CreateUser`, 'time')\n    conLog([`CreateUser props: `, { content, credentials }])\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.security.createUser(null, { content, credentials }, options)\n            .then((kUser: KUser) => {\n                kUser._source.credentials.local.username = credentials.local.username\n                const rUser = convertKUser([kUser])?.[0]\n                const nItem = addNItem('user', rUser)\n                triggerQueries('user')\n\n                conLog([`CreateUser: `, nItem])\n                conLog(`CreateUser`, 'timeEnd')\n                return nItem\n            })\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle createUser ' + ': ' + error.message }))\n    )\n}\n\nexport default createUser"],"names":["create","noodlNode","createScheme","_inputValues","sendOutput","orders","map","i","order","sort","createPromise","scheme","createUserPromise","schemeArrays","filter","executeArrays","results","schemeArray","arrayResults","Promise","all","refs","references","forEach","ref","body","id","dbClass","idx","sendSignal","catch","error","console","deepFlush","item","finalObj","k","v","Array","isArray","nestedObj","length","Error","createItem","Kuzzle","window","options","setOptions","dbClassV","dbClassVersion","flushedBody","connect","then","document","dbVersion","kItem","rItem","nItem","title","message","createUser","refresh","content","credentials","local","notSecret","security","kUser","_source","username","rUser","convertKUser"],"mappings":"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"}