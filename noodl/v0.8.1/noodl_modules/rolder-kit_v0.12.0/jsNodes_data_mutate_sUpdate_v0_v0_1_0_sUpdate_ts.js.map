{"version":3,"file":"jsNodes_data_mutate_sUpdate_v0_v0_1_0_sUpdate_ts.js","sources":["./jsNodes/data/mutate/sUpdate/v0/v0.1.0/sUpdate.ts","./libs/kuzzle/update/v0.3.0/update.ts","./libs/kuzzle/updateUser/v0.1.0/updateUser.ts"],"sourcesContent":["import { sendOutput, sendSignal } from \"../../../../../../utils/noodl/v0.1.0/send\"\nimport update from \"../../../../../../libs/kuzzle/update/v0.3.0/update\"\nimport updateUser from \"../../../../../../libs/kuzzle/updateUser/v0.1.0/updateUser\"\n\ntype UpdateScheme = {\n  dbClass: string\n  order: number\n  id: string\n  references: string[]\n  body: Item\n}\n\nconst signals = {\n  update: (noodlNode: NodeInstance) => {\n    const { updateScheme }: { updateScheme: UpdateScheme[] } = noodlNode._inputValues\n    sendOutput({ noodlNode, portName: 'updating', value: true })\n\n    const updatePromise = (scheme: UpdateScheme) => update(scheme.dbClass, scheme.id, scheme.body)\n    const updateUserPromise = (scheme: UpdateScheme) => updateUser(scheme.id, scheme.body, { refresh: 'wait_for' })\n    \n    async function executeArrays() {\n      let results: any = {};\n      results = await Promise.all(updateScheme.map((scheme: any) => {\n        const refs: string[] = scheme.references\n        if (refs) refs.forEach(ref => scheme.body[ref] = { ...scheme.body[ref], id: results[ref]?.id })\n        if (scheme.dbClass === 'user') return updateUserPromise(scheme)\n        else return updatePromise(scheme)\n      }))\n      updateScheme.forEach((scheme, idx) => results[scheme.dbClass] = updateScheme[idx])\n\n      sendOutput({ noodlNode, portName: 'updatedData', value: results })\n      sendSignal({ noodlNode, portName: 'updated' })\n      sendOutput({ noodlNode, portName: 'updating', value: false })\n    }\n\n    executeArrays().catch((error) => console.error(error))\n  }\n}\n\nexport default signals","import { convertKuzzleResponse, dbVersion, dbClassVersion } from '../../../../utils/data/v0.3.0/data'\nimport conLog from '../../../../utils/debug/conLog/v0.1.0/conLog'\nimport ErrorHandler from '../../../errorHandler/v0.1.0/ErrorHandler'\nimport useData from '../../../useData/v0.5.0/useData'\nimport getOptions from '../../utils/getOptions/v0.1.0/getOptions'\n\nconst update = async (dbClass: string, id: string, body: any, options?: Options) => {\n    const { Kuzzle, Noodl } = window\n    const opts = getOptions(dbClass, options)\n    const dbClassV = dbClassVersion(dbClass)\n\n    conLog(`${dbClassV} update`, 'time')\n    conLog([`${dbClassV} props: `, { dbClass, id, body, options }])\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.document.update(dbVersion(), dbClassV, id, body, opts)\n            .then((response: any) => {\n                if (!Noodl.Objects[dbClass].subscribe) useData.invalidate(dbClass)\n                const jsonItem = convertKuzzleResponse(response)\n                conLog([`${dbClassV} updated: `, jsonItem])\n                conLog(`${dbClassV} update`, 'timeEnd')\n                return jsonItem\n            })\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle update ' + dbClassV + ': ' + error.message }))\n    )\n}\n\nexport default update","import conLog from '../../../../utils/debug/conLog/v0.1.0/conLog'\nimport ErrorHandler from '../../../errorHandler/v0.1.0/ErrorHandler'\n\nconst updateUser = async (id: string, body: any, options?: Options) => {\n    const Kuzzle = window.Kuzzle\n\n    conLog(`UpdateUser`, 'time')\n    conLog([`Props: `, { id, body, options }])\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.security.updateCredentials('local', id, body.credentials.local)\n            .then(() => Kuzzle.security.updateUser(id, body, options))\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle updateUser ' + ': ' + error.message }))\n    )\n}\n\nexport default updateUser"],"names":["update","noodlNode","updateScheme","_inputValues","sendOutput","portName","value","updatePromise","scheme","dbClass","id","body","updateUserPromise","refresh","executeArrays","results","Promise","all","map","refs","references","forEach","ref","idx","sendSignal","catch","error","console","options","Kuzzle","Noodl","window","opts","dbClassV","dbClassVersion","connect","then","document","dbVersion","response","Objects","subscribe","jsonItem","convertKuzzleResponse","title","message","updateUser","security","updateCredentials","credentials","local"],"mappings":"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"}