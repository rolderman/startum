{"version":3,"file":"jsNodes_data_mutate_sCreate_v0_v0_1_0_sCreate_ts.js","sources":["./jsNodes/data/mutate/sCreate/v0/v0.1.0/sCreate.ts","./libs/kuzzle/create/v0.3.0/create.ts","./libs/kuzzle/createUser/v0.3.0/createUser.ts"],"sourcesContent":["import unique from \"just-unique\"\nimport create from \"../../../../../../libs/kuzzle/create/v0.3.0/create\"\nimport { sendOutput, sendSignal } from \"../../../../../../utils/noodl/v0.1.0/send\"\nimport createUser from \"../../../../../../libs/kuzzle/createUser/v0.3.0/createUser\"\n\ntype CreateScheme = {\n  dbClass: string,\n  order: number,\n  references: string[]\n  body: Item\n}\n\nconst signals = {\n  create: (noodlNode: NodeInstance) => {\n    const { createScheme }: { createScheme: CreateScheme[] } = noodlNode._inputValues\n    sendOutput({ noodlNode, portName: 'creating', value: true })\n\n    const orders = unique(createScheme.map(i => i.order)).sort()\n    const createPromise = (scheme: CreateScheme) => create(scheme.dbClass, scheme.body)\n    const createUserPromise = (scheme: CreateScheme) => createUser(scheme.body, { refresh: 'wait_for' })\n    const schemeArrays = orders.map(order => {\n      return createScheme.filter(i => i.order === order)\n    })\n\n    async function executeArrays() {\n      let results: any = {};\n      for (const schemeArray of schemeArrays) {\n        const arrayResults = await Promise.all(schemeArray.map((scheme: any) => {\n          const refs: string[] = scheme.references\n          if (refs) refs.forEach(ref => scheme.body[ref] = { ...scheme.body[ref], id: results[ref]?.id })\n          if (scheme.dbClass === 'user') return createUserPromise(scheme)\n          else return createPromise(scheme)\n        }))\n        schemeArray.forEach((scheme, idx) => results[scheme.dbClass] = arrayResults[idx])\n      }\n      sendOutput({ noodlNode, portName: 'createdData', value: results })\n      sendSignal({ noodlNode, portName: 'created' })\n      sendOutput({ noodlNode, portName: 'creating', value: false })\n    }\n\n    executeArrays().catch((error) => console.error(error))\n  }\n}\n\nexport default signals","import { convertKuzzleResponse, dbVersion, dbClassVersion } from '../../../../utils/data/v0.3.0/data'\nimport conLog from '../../../../utils/debug/conLog/v0.1.0/conLog'\nimport ErrorHandler from '../../../errorHandler/v0.1.0/ErrorHandler'\nimport useData from '../../../useData/v0.5.0/useData'\nimport getOptions from '../../utils/getOptions/v0.1.0/getOptions'\n\nconst create = async (dbClass: string, body: any, options?: Options) => {\n    const { Kuzzle, Noodl } = window\n    const opts = getOptions(dbClass, options)\n    const dbClassV = dbClassVersion(dbClass)\n\n    conLog(`${dbClassV} create`, 'time')\n    conLog([`${dbClassV} props: `, { dbClass, body, options }])\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.document.create(dbVersion(), dbClassV, body, null, opts)\n            .then((response: any) => {\n                if (!Noodl.Objects[dbClass].subscribe) useData.invalidate(dbClass)\n                const jsonItem = convertKuzzleResponse(response)\n                conLog([`${dbClassV} created: `, jsonItem])\n                conLog(`${dbClassV} create`, 'timeEnd')\n                return jsonItem\n            })\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle create ' + dbClassV + ': ' + error.message }))\n    )\n}\n\nexport default create","import conLog from '../../../../utils/debug/conLog/v0.1.0/conLog'\nimport ErrorHandler from '../../../errorHandler/v0.1.0/ErrorHandler'\nimport { convertKuzzleResponse } from '../../../../utils/data/v0.3.0/data'\n\nconst createUser = async (body: any, options?: Options) => {\n    const Kuzzle = window.Kuzzle\n\n    conLog(`CreateUser`, 'time')\n    conLog([`Props: `, { body, options }])\n\n    return Kuzzle.connect().then(() =>\n        Kuzzle.security.createUser(null, body, options)\n            .then((response: any) => {\n                const jsonItem = convertKuzzleResponse(response)\n                conLog([`CreateUser: `, jsonItem])\n                conLog(`CreateUser`, 'timeEnd')\n                return jsonItem\n            })\n            .catch((error: any) => ErrorHandler({ title: 'Системная ошибка!', message: 'Kuzzle createUser ' + ': ' + error.message }))\n    )\n}\n\nexport default createUser"],"names":["create","noodlNode","createScheme","_inputValues","sendOutput","portName","value","orders","map","i","order","sort","createPromise","scheme","dbClass","body","createUserPromise","refresh","schemeArrays","filter","executeArrays","results","schemeArray","arrayResults","Promise","all","refs","references","forEach","ref","id","idx","sendSignal","catch","error","console","options","Kuzzle","Noodl","window","opts","dbClassV","dbClassVersion","connect","then","document","dbVersion","response","Objects","subscribe","jsonItem","convertKuzzleResponse","title","message","createUser","security"],"mappings":"uQA4CA,EAhCgB,CACdA,OAAQ,AAACC,IACP,GAAM,CAAEC,aAAAA,CAAY,CAAE,CAAqCD,EAAUE,YAAY,CACjF,KAAAC,UAAA,EAAW,CAAEH,UAAAA,EAAWI,SAAU,WAAYC,MAAO,EAAK,GAE1D,IAAMC,EAAS,cAAOL,EAAaM,GAAG,CAAC,AAAAC,GAAKA,EAAEC,KAAK,GAAGC,IAAI,GACpDC,EAAgB,AAACC,GAAyB,cAAOA,EAAOC,OAAO,CAAED,EAAOE,IAAI,EAC5EC,EAAoB,AAACH,GAAyB,cAAWA,EAAOE,IAAI,CAAE,CAAEE,QAAS,UAAW,GAC5FC,EAAeX,EAAOC,GAAG,CAAC,AAAAE,GACvBR,EAAaiB,MAAM,CAAC,AAAAV,GAAKA,EAAEC,KAAK,GAAKA,IAmB9CU,AAhBA,gBAAeA,IACb,IAAIC,EAAe,CAAC,EACpB,IAAK,IAAMC,KAAeJ,EAAc,CACtC,IAAMK,EAAe,MAAMC,QAAQC,GAAG,CAACH,EAAYd,GAAG,CAAC,AAACK,IACtD,IAAMa,EAAiBb,EAAOc,UAAU,OAExC,CADID,GAAMA,EAAKE,OAAO,CAAC,AAAAC,GAAOhB,EAAOE,IAAI,CAACc,EAAI,CAAG,CAAE,GAAGhB,EAAOE,IAAI,CAACc,EAAI,CAAEC,GAAIT,CAAO,CAACQ,EAAI,EAAEC,EAAG,GACzFjB,AAAmB,SAAnBA,EAAOC,OAAO,EAAoBE,EAAkBH,GAC5CD,EAAcC,EAC5B,IACAS,EAAYM,OAAO,CAAC,CAACf,EAAQkB,IAAQV,CAAO,CAACR,EAAOC,OAAO,CAAC,CAAGS,CAAY,CAACQ,EAAI,CAClF,CACA,KAAA3B,UAAA,EAAW,CAAEH,UAAAA,EAAWI,SAAU,cAAeC,MAAOe,CAAQ,GAChE,KAAAW,UAAA,EAAW,CAAE/B,UAAAA,EAAWI,SAAU,SAAU,GAC5C,KAAAD,UAAA,EAAW,CAAEH,UAAAA,EAAWI,SAAU,WAAYC,MAAO,EAAM,EAC7D,KAEgB2B,KAAK,CAAC,AAACC,GAAUC,QAAQD,KAAK,CAACA,GACjD,CACF,C,6JCpCA,IAAMlC,EAAS,MAAOc,EAAiBC,EAAWqB,KAC9C,GAAM,CAAEC,OAAAA,CAAM,CAAEC,MAAAA,CAAK,CAAE,CAAGC,OACpBC,EAAO,cAAW1B,EAASsB,GAC3BK,EAAW,KAAAC,cAAA,EAAe5B,GAKhC,MAHA,cAAO,CAAC,EAAE2B,EAAS,OAAO,CAAC,CAAE,QAC7B,cAAO,CAAC,CAAC,EAAEA,EAAS,QAAQ,CAAC,CAAE,CAAE3B,QAAAA,EAASC,KAAAA,EAAMqB,QAAAA,CAAQ,EAAE,EAEnDC,EAAOM,OAAO,GAAGC,IAAI,CAAC,IACzBP,EAAOQ,QAAQ,CAAC7C,MAAM,CAAC,KAAA8C,SAAA,IAAaL,EAAU1B,EAAM,KAAMyB,GACrDI,IAAI,CAAC,AAACG,IACC,CAACT,EAAMU,OAAO,CAAClC,EAAQ,CAACmC,SAAS,EAAE,oBAAkB,CAACnC,GAC1D,IAAMoC,EAAW,KAAAC,qBAAA,EAAsBJ,GAGvC,MAFA,cAAO,CAAC,CAAC,EAAEN,EAAS,UAAU,CAAC,CAAES,EAAS,EAC1C,cAAO,CAAC,EAAET,EAAS,OAAO,CAAC,CAAE,WACtBS,CACX,GACCjB,KAAK,CAAC,AAACC,GAAe,cAAa,CAAEkB,MAAO,oBAAqBC,QAAS,iBAAmBZ,EAAW,KAAOP,EAAMmB,OAAO,AAAC,IAE1I,EAEA,MAAerD,C,iICvBf,IAAMsD,EAAa,MAAOvC,EAAWqB,KACjC,IAAMC,EAASE,OAAOF,MAAM,CAK5B,MAHA,cAAO,aAAc,QACrB,cAAO,CAAC,UAAW,CAAEtB,KAAAA,EAAMqB,QAAAA,CAAQ,EAAE,EAE9BC,EAAOM,OAAO,GAAGC,IAAI,CAAC,IACzBP,EAAOkB,QAAQ,CAACD,UAAU,CAAC,KAAMvC,EAAMqB,GAClCQ,IAAI,CAAC,AAACG,IACH,IAAMG,EAAW,KAAAC,qBAAA,EAAsBJ,GAGvC,MAFA,cAAO,CAAC,eAAgBG,EAAS,EACjC,cAAO,aAAc,WACdA,CACX,GACCjB,KAAK,CAAC,AAACC,GAAe,cAAa,CAAEkB,MAAO,oBAAqBC,QAAS,uBAA8BnB,EAAMmB,OAAO,AAAC,IAEnI,EAEA,MAAeC,C"}